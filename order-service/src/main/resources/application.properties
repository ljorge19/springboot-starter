
#spring.profiles.active=dev
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=
spring.datasource.username=

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=
spring.jpa.properties.hibernate.default_schema=
# ===============================
# = LOGGING
# ===============================
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error
# ===============================
# = SERVER CONFIGURATIONS
# ===============================
server.contextPath=/orderServico
# ===============================
# = JSON RESPONSE
# ===============================
# Retorna na resposta do JSon apenas as propriedades que no esto nulas
spring.jackson.default-property-inclusion=NON_NULL